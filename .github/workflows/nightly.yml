name: Nightly Reports

on:
  schedule:
    - cron: "0 6 * * *"   # 06:00 UTC aprox; ajusta si necesitas otra hora
  workflow_dispatch:       # Permite correr manualmente

permissions: { contents: read }
timeout-minutes: 15

jobs:
  build-and-send:
    name: Build (real) + upload artifacts + summary
    runs-on: ubuntu-latest
    # Si lanzas otra corrida manual al mismo tiempo, cancela la anterior
    concurrency:
      group: nightly-${{ github.ref }}
      cancel-in-progress: true

    env:
      # Par√°metros NO sensibles recomendados por el runbook
      MAX_RUNTIME: "900"        # 15 min de tope de job
      RATE_LIMIT: "safe"
      API_BASE: "https://example.api"   # placeholder si tu app lo usa

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: (Optional) Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Playwright browsers (Chromium)
        run: |
          python -m playwright install --with-deps chromium

      - name: Run CLI (real send)
        env:
          SMTP_HOST: ${{ secrets.SMTP_HOST }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
          FROM_EMAIL: ${{ secrets.FROM_EMAIL }}
        run: |
          set -e
          python -m app run --config config/queries.yml --out out --strict

      - name: Summarize results
        run: |
          python - << 'PY'
          import json, pathlib, os, sys
          p = pathlib.Path("out/summary.json")
          if not p.exists():
              print("summary.json not found", file=sys.stderr)
              sys.exit(1)
          data = json.loads(p.read_text(encoding="utf-8"))
          lines = ["# Nightly Summary", "", "| Report | Items |", "|---|---|"]
          for row in data:
              lines.append(f"| {row.get('report','?')} | {row.get('count','?')} |")
          with open(os.environ["GITHUB_STEP_SUMMARY"], "a", encoding="utf-8") as fh:
              fh.write("\n".join(lines) + "\n")
          PY

      - name: Upload artifacts (PDF/JSON/HTML/logs)
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: |
            out/**
          if-no-files-found: error
          retention-days: 21
